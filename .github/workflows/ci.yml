name: build-and-deploy

on:
  push:
    branches: [main, dev] # CD on push to master
  pull_request:
    branches: [main, dev] # CI on PRs

jobs:
  # ----- CI: Lint + Build -----
  build-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Backend
      - name: Install backend deps
        working-directory: server
        run: npm ci

      - name: Lint backend (fail on warnings)
        working-directory: server
        run: npm run lint -- --max-warnings=0

      # Frontend
      - name: Install frontend deps
        working-directory: client
        run: npm ci

      - name: Lint frontend (fail on warnings)
        working-directory: client
        run: npm run lint -- --max-warnings=0

      # Sanity: Dockerfile build
      - name: Build backend image
        run: docker build -t backend ./server

      - name: Build frontend image
        run: docker build -t frontend ./client
  deploy:
    needs: build-and-lint
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_KEY }}

      - name: Add EC2 to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo 'âœ… Connected to EC2'"

      - name: Deploy to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /home/${{ secrets.EC2_USER }}/app  # adjust path
            git pull origin main || true
            docker compose down || true
            docker compose up -d --build
          EOF
